# save this in csv
write_csv((jan_2013,"data/januaury_2013.csv"))
# save this in csv
write_csv(jan_2013,"data/januaury_2013.csv")
# write iin xls
library(writexl)
write_xlsx(jan,"januauary_2013.xlsx")
write_xlsx(jan,"januauary_2013.xlsx")
write_xlsx(jan,"data/januauary_2013.xlsx")
### 1.Missing Value
library(nycflights13)
flights
df<-flights
# plot these missing values
library(tidyverse)
#df%>% is.na()%>% barplot()
df%>% is.na()%>% colSums%>%barplot()
# sav the plot
dev.copy(png,"output/missing_values.png")
#df%>% is.na()%>% barplot() # take alot of memeory
df%>% is.na()%>% colSums%>%barplot()
# sav the plot
dev.copy(png,"output/missing_values.png")
gc()
##1 .Import Library
library(tidyverse)
library(readxl)
df<- read_excel("Data/titanic3.xls")
View(df)
## 3.
df%>% is.na(df)%>%colsums()
## 3.
df%>% is.na()%>%colsums()
##1 .Import Library
library(tidyverse)
library(readxl)
## 2. Import dataset
df<- read_excel("Data/titanic3.xls")
View(df)
## 3.
df%>% is.na()%>%colsums()
## 3.
df%>% is.na()%>%colSums()
## 3.
df%>% is.na()%>%colSums() %>% barplot
## 2. Import dataset
df<- read_excel("Data/titanic.csv")
## 2. Import dataset
df<- read_csv("Data/titanic.csv")
df<- read_csv("Data/titanic.csv")
View(df)
## 3.
df%>% is.na()%>%colSums() %>% barplot
# Percentage of missing values
df%>%
summarise_all(~sum(is.na(.)/n()))
df%>%
summarise_all(~sum(is.na(.)/n()))
%
df%>%
summarise_all(~sum(is.na(.)/n()))
gc()
## removing missing values
df%>% drop_na()%>%
is.na()%>%
colSums()%>%
barplot()
df_clean_1<-df%>% drop_na()
View(df_clean_1)
View(df_clean_1)
# remove the column dack
df_clean_2<-df%>% select(-dack)
# remove the column dack
df_clean_2<-df%>% select(-deck)
## remove rows with missing values in embarked
df_clean_3<-df%>% drop_na(embarked)
## remove rows with missing values in embarked
df_clean_3<-df_clean_2%>% drop_na(embarked)
# remove the column dack
df_clean_2<-df%>% select(-deck)
##impute missing values of age
df_clean_5<-df%>% mutate(age=ifalse(is.na(age).mean(age,na.rm=TRUE),age))
##impute missing values of age
df_clean_5<- df%>%
mutate(age=ifalse(is.na(age),mean(age,na.rm=TRUE),age))
##impute missing values of age
df_clean_5<- df%>%
mutate(age=ifelse(is.na(age),mean(age,na.rm=TRUE),age))
View(df)
View(df)
##impute missing values of age
df_clean_5<- df%>%
mutate(age=ifelse(is.na(Age),mean(Age,na.rm=TRUE),Age))
## lets check
df%>% is.na()%>%colSums() %>% barplot()
## lets check
df%>% is.na()%>%colSums()
df_clean_final <-df %>%
select(-deck)%>%
drop_na(Embarked)%>%
mutate(age=ifelse(is.na(Age),mean(Age,na.rm=TRUE),Age))
df_clean_final <-df %>%
select(-Cabin)%>%
drop_na(Embarked)%>%
mutate(age=ifelse(is.na(Age),mean(Age,na.rm=TRUE),Age))
## lets check
df_clean_final%>% is.na()%>%colSums()
df_clean_final <-df %>%
select(-Cabin)%>%
drop_na(Embarked)%>%
mutate(age=ifelse(is.na(Age),mean(Age,na.rm=TRUE),Age))
## lets check
df_clean_final%>% is.na()%>%colSums()
df_clean_final <-df_clean_final %>%
mutate(Embarked=ifelse(is.na(Embarked),mode(Embarked,na.rm=TRUE),Embarked),
(Embarked_town=ifelse(is.na(Embarked_town),mode(Embarked_town,na.rm=TRUE),Embarked_town)
## lets check
df_clean_final%>% is.na()%>%colSums()
## lets check
df_clean_final%>% is.na()%>%colSums()
### advance imputation
library(mice)
### advance imputation
install.packages("mice")
library(mice)
df_imputed<-mice(df,m=5,maxit=50,method="pmm",speed=500)
View(df_imputed)
View(df_imputed)
(Embarked_town=ifelse(is.na(Embarked_town)|Embarked_town,mode(Embarked_town,na.rm=TRUE),Embarked_town)
view(df)
library(tidyverse)
library(readxl)
df<-read_excel("Data/titanic3.xls")
view(df)
# draw a hostpgram
hist(df$age)
ggplot(df,aes(x=age))+goem_histogram(bins=20)+
theme_classic()
# draw a histogram with ggplot2 having 10 bins
ggplot(df,aes(x=age))+geom_histogram(bins=20)+
theme_classic()
median(df$age,na.rm = TRUE)
mean(df$age,na.rm=TRUE)
A<-c(2,3,4,5,6,7,8,9,2222,000,555,4655232)
median(A)
#Normal Distribution
x<-seq(-4,4,length=100)
hist(x)
y<-dnor(x,mean=0 ,sd =1)
#Normal Distribution
hist(df$age)
shapiro.test(df$age)
hist(df$fare)
shapiro.test(df$fare)
ggplot(df,aes(x=fare))+goem_histogram(bins=50)+
theme_classic()
ggplot(df,aes(x=fare))+geom_histogram(bins=50)+
theme_classic()
gplot(df,aes(x=age))+geom_histogram(bins=50)+
theme_classic()
ggplot(df,aes(x=age))+geom_histogram(bins=50)+
theme_classic()
ggplot(df,aes(x=fare))+geom_histogram(bins=50)+
theme_classic()
print("data is  normally distributed")
x<-df$age
if (skewness(x) > 0) {
cat("The distribution is positively skewed")
} else if (skewness(x) < 0) {
cat("The distribution is negatively skewed")
} else {
cat("The distribution is symmetric")
}
install.packages("moments")
library(moments)
x<-df$age
if (skewness(x) > 0) {
cat("The distribution is positively skewed")
} else if (skewness(x) < 0) {
cat("The distribution is negatively skewed")
} else {
cat("The distribution is symmetric")
}
x <- na.omit(x)
cat("Not enough data to compute skewness and kurtosis.\n")
# Check if the data has sufficient observations
if (length(x) < 3) {
cat("Not enough data to compute skewness and kurtosis.\n")
} else {
# Calculate skewness
x_skewness <- skewness(x, na.rm = TRUE)
x_kurtosis <- kurtosis(x, na.rm = TRUE)
# Interpret skewness
if (x_skewness > 0) {
cat("The distribution is positively skewed.\n")
} else if (x_skewness < 0) {
cat("The distribution is negatively skewed.\n")
} else {
cat("The distribution is symmetric.\n")
}
# Interpret kurtosis
if (x_kurtosis > 3) {
cat("The distribution is leptokurtic (sharp peak).\n")
} else if (x_kurtosis < 3) {
cat("The distribution is platykurtic (flat peak).\n")
} else {
cat("The distribution is mesokurtic (normal peak).\n")
}
}
x<-df$age
if(shapiro.test(x)$p.value>0.05){
print("data is  normally distributed")
} else{
print("data is not normally distributed")
}
# kurtosis and skewness
# Remove missing values
x <- na.omit(x)
# Check if the data has sufficient observations
if (length(x) < 3) {
cat("Not enough data to compute skewness and kurtosis.\n")
} else {
# Calculate skewness
x_skewness <- skewness(x, na.rm = TRUE)
x_kurtosis <- kurtosis(x, na.rm = TRUE)
# Interpret skewness
if (x_skewness > 0) {
cat("The distribution is positively skewed.\n")
} else if (x_skewness < 0) {
cat("The distribution is negatively skewed.\n")
} else {
cat("The distribution is symmetric.\n")
}
# Interpret kurtosis
if (x_kurtosis > 3) {
cat("The distribution is leptokurtic (sharp peak).\n")
} else if (x_kurtosis < 3) {
cat("The distribution is platykurtic (flat peak).\n")
} else {
cat("The distribution is mesokurtic (normal peak).\n")
}
}
# Density plot of age
ggplot(df,aes(x=age)+geom_density()+theme_classic())
# Density plot of age
ggplot(df,aes(x=age))+geom_density()+theme_classic()
# why we cant do same wtih catogerol columns
ggplot(df,aes(x=sex))+geom_density()+theme_classic()
ggplot(df,aes(x=age))+geom_histogram()+theme_classic()
boxplot(df#age)
boxplot(df$age)
boxplot(dfAge)
boxplot(df$Age)
#count plot of class
ggplot(df,aes(x=class))+geom_bar()+theme_classic()
View(df)
View(df)
#count plot of class
ggplot(df,aes(x=sex))+geom_bar()+theme_classic()
#count plot of class
ggplot(df,aes(x=sex,y=age))+geom_bar(stat="identity")+geom_bar()+theme_classic()
#count plot of class
ggplot(df,aes(x=sex))+geom_bar(stat="identity")+geom_bar()+theme_classic()
#count plot of class
ggplot(df,aes(x=sex))+geom_bar()+geom_bar()+theme_classic()
group_by(sex)%>%
df%>%
group_by(sex)%>%
summarise(mean_age=mean(age,na.rn=TRUE),sd_age=sd(age,na.rn=TRUE)
#calculate the mean and Sd of age
df%>%
#calculate the mean and Sd of age
df%>%
group_by(sex)%>%
summarise(mean_age=mean(age,na.rn=TRUE),sd_age=sd(age,na.rn=TRUE))
#calculate the mean and Sd of age
df %>%
group_by(sex) %>%
summarise(
mean_age = mean(age, na.rm = TRUE),
sd_age = sd(age, na.rm = TRUE)
)
df%>%
filter(sex=="male")%>%
ggplot(x=age))+geom_histogram()+theme_classic()
df%>%
filter(sex=="male")%>%
ggplot(aes(x=age))+geom_histogram()+theme_classic()
df %>%
group_by(sex) %>%
summarise(
mean_age = mean(age, na.rm = TRUE),
sd_age = sd(age, na.rm = TRUE)
)%>%
ggplot(aes(x=sex))+geom_bar()
#library Pacakages
library(readxl)
df<-read_excel("Data/titanic3.xls")
#1
view(df)
#1
view(df)
#1
View(df)
#
str(df)
#3
summary(df)
#4
dim(df)
# 5
head(df)
#6
tail(df)
#7
nrow(df) # no of rows
#8
ncol(df) # no of col
#9
colnames(df)
#10
sapply(df,class)
class(df)
#11
levels(df$sex)
# make sex as factors
df$sex<-as.factor(df$sex)
#11
levels(df$sex) # to see the levels of columns
#10
sapply(df,class) # to see the class of each column
#12
sum(is.na(df))
#13
colsums(is.na(df))
#13
colSums(is.na(df))
#14
duplicated(df)
#14
sum(duplicated(df))
#15
subset(df,pclass==1)
#16
sort(df$age)
min(df$age)
min(df$age,na.rm=TRUE)
#18
df[order(df$age)]
#18
df[order(df$age),]
#18
mean(df$age)
#18
mean(df$age,na.rm=TRUE) # to see the median
#19
median(df$age,na.rm=TRUE)
# 20.
sd(df$age), na.rm=TRUE
# 20.
sd(df$age, na.rm=TRUE)
#21
se<-sd(df$age,na.rm=TRUE)/sqrt(nrow(df))
#22
quantile(df$age,na.rm=TRUE)
#23
range(df$age,na.rn=TRUE)
#23
range(df$age,na.rm=TRUE)# to see the range
#24
tables(df$pclass)
#24
tables(df$pclass)
## catogorical frequencies
#24
table(df$pclass) # to see the frequency of each class
tables(df$sex)
table(df$sex)
#25
length(df)# to see the lenght of df
length(df$sex)
length(unique(df$sex))
# 27
prop.table(table(df$pclass))
# find the precent
prop.table(table(df$class))*100
# find the precent
prop.table(table(df$class))*100
# find the precent
prop.table(table(df$pclass))*100
# 28
cor(df$age,df$fare)
# 28
cor(df$age,df$fare,na.rm=TRUE)# to see the correlation between two rows
# 28
cor(df$age,df$fare,use="complete.obs")# to see the correlation between two rows
#29
host(df$age)# to see the histogram
#29
hist(df$age)# to see the histogram
# 30
boxplot(df$age)
plot(df)
# load the data
data("diamonds")
# load the data
df<-read.excel("Data/titanic3.xls")
library(readxl)
# load the data
df<-read.excel("Data/titanic3.xls")
# load the data
df<-read_excel("Data/titanic3.xls")
#scatter plot
plot_ly(df,x=~Age,y=~Fare,,type="Scatter")
### Using plotly library for making interactive plots
library(plotly)
#scatter plot
plot_ly(df,x=~Age,y=~Fare,,type="Scatter")
#scatter plot
plot_ly(df,x=~age,y=~fare,,type="Scatter")
View(df)
View(df)
#scatter plot
plot_ly(df,x= ~age,y= ~fare,type="Scatter")
#scatter plot
plot_ly(df,x= ~age,y= ~fare,type="Scatter")
#scatter plot
plot_ly(df,x= ~age,y= ~fare,type="scatter")
#scatter plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter")
#scatter plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter",mode="markers"
#scatter plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter",mode="markers")
fare
#line plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter",mode="lines")
#line plot
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="scatter",mode="lines")
#line plot
plot_ly(df,x= ~pclass,y= ~embarked,color=~sex,type="scatter",mode="lines")
#barplot
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="bar",mode="markers")
# histogram
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="histogram",mode="markers")
# histogram
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="histogram",mode="markers")
# histogram
plot_ly(df,x= ~age,color=~sex,type="histogram",mode="markers")
#boxplot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="box",mode="markers")
#boxplot
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="box",mode="markers")
#boxplot
plot_ly(df,x= ~pclass,y= ~fare,color=~who,type="box",mode="markers")
View(df)
#scatter plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter",mode="markers",
size=~fare
)
#heatmap
plot_ly(df,x= ~age,y=~embarked,z= ~fare,color=~sex,type="scatter",mode="markers")
#heatmap
plot_ly(df,x= ~age,y=~embarked,z= ~fare,color=~sex,type="heatmap",mode="markers")
#heatmap
plot_ly(df,x= ~age,y=~embarked,z= ~age,type="heatmap",mode="markers")
#heatmap
plot_ly(df,x= ~age,y=~embarked,z= ~age,type="heatmap")
#heatmap
plot_ly(df,x= ~pclass,y=~embarked,z= ~age,type="heatmap")
#pie chart
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="pie",mode="markers")
#pie chart
plot_ly(df,labels=~pclass,type="pie",mode="markers")
#bubble chart
plot_ly(df,x= ~age,y= ~fare,color=~sex,size=~fare,type="scatter")
#voilon plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="voilon")
#voilon plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="voili)
#voilon plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="voiln")
#voilon plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="violin")
library(plotly)
library(tidyverse)
library(readxl)
# load the data
df<-read_excel("Data/titanic3.xls")
#3d scatter plot
plot_ly(df,x= ~age,y= ~fare,z=~pclass,color=~sex,type="scatter3d",mode="markers")
library(plotly)
library(tidyverse)
library(readxl)
# load the data
df<-read_excel("Data/titanic3.xls")
#voilon plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="violin")
#boxplot
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="box",mode="markers")
library(plotly)
library(tidyverse)
library(readxl)
# load the data
#barplot
plot_ly(df,x= ~pclass,y= ~fare,color=~sex,type="bar",mode="markers")
#scatter plot
plot_ly(df,x= ~age,y= ~fare,color=~sex,type="scatter",mode="markers",
size=~fare
)
#3d scatter plot
plot_ly(df,x= ~age,y= ~fare,z=~pclass,color=~sex,type="scatter3d",mode="markers")
